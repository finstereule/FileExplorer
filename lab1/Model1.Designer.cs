//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("FileManagerModel", "FK__DbLoggs__UserId__3D5E1FD2", "DbUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lab1.DbUsers), "DbLoggs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lab1.DbLoggs), true)]

#endregion

namespace lab1
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class FileManagerEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект FileManagerEntities, используя строку соединения из раздела "FileManagerEntities" файла конфигурации приложения.
        /// </summary>
        public FileManagerEntities() : base("name=FileManagerEntities", "FileManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта FileManagerEntities.
        /// </summary>
        public FileManagerEntities(string connectionString) : base(connectionString, "FileManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта FileManagerEntities.
        /// </summary>
        public FileManagerEntities(EntityConnection connection) : base(connection, "FileManagerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DbLoggs> DbLoggs
        {
            get
            {
                if ((_DbLoggs == null))
                {
                    _DbLoggs = base.CreateObjectSet<DbLoggs>("DbLoggs");
                }
                return _DbLoggs;
            }
        }
        private ObjectSet<DbLoggs> _DbLoggs;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DbUsers> DbUsers
        {
            get
            {
                if ((_DbUsers == null))
                {
                    _DbUsers = base.CreateObjectSet<DbUsers>("DbUsers");
                }
                return _DbUsers;
            }
        }
        private ObjectSet<DbUsers> _DbUsers;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DbLoggs. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDbLoggs(DbLoggs dbLoggs)
        {
            base.AddObject("DbLoggs", dbLoggs);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DbUsers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDbUsers(DbUsers dbUsers)
        {
            base.AddObject("DbUsers", dbUsers);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FileManagerModel", Name="DbLoggs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DbLoggs : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DbLoggs.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="massage">Исходное значение свойства Massage.</param>
        /// <param name="mDate">Исходное значение свойства MDate.</param>
        /// <param name="param">Исходное значение свойства Param.</param>
        public static DbLoggs CreateDbLoggs(global::System.Int32 id, global::System.String massage, global::System.String mDate, global::System.String param)
        {
            DbLoggs dbLoggs = new DbLoggs();
            dbLoggs.ID = id;
            dbLoggs.Massage = massage;
            dbLoggs.MDate = mDate;
            dbLoggs.Param = param;
            return dbLoggs;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Massage
        {
            get
            {
                return _Massage;
            }
            set
            {
                OnMassageChanging(value);
                ReportPropertyChanging("Massage");
                _Massage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Massage");
                OnMassageChanged();
            }
        }
        private global::System.String _Massage;
        partial void OnMassageChanging(global::System.String value);
        partial void OnMassageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MDate
        {
            get
            {
                return _MDate;
            }
            set
            {
                OnMDateChanging(value);
                ReportPropertyChanging("MDate");
                _MDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MDate");
                OnMDateChanged();
            }
        }
        private global::System.String _MDate;
        partial void OnMDateChanging(global::System.String value);
        partial void OnMDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Param
        {
            get
            {
                return _Param;
            }
            set
            {
                OnParamChanging(value);
                ReportPropertyChanging("Param");
                _Param = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Param");
                OnParamChanged();
            }
        }
        private global::System.String _Param;
        partial void OnParamChanging(global::System.String value);
        partial void OnParamChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileManagerModel", "FK__DbLoggs__UserId__3D5E1FD2", "DbUsers")]
        public DbUsers DbUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DbUsers>("FileManagerModel.FK__DbLoggs__UserId__3D5E1FD2", "DbUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DbUsers>("FileManagerModel.FK__DbLoggs__UserId__3D5E1FD2", "DbUsers").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DbUsers> DbUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DbUsers>("FileManagerModel.FK__DbLoggs__UserId__3D5E1FD2", "DbUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DbUsers>("FileManagerModel.FK__DbLoggs__UserId__3D5E1FD2", "DbUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FileManagerModel", Name="DbUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DbUsers : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DbUsers.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="login">Исходное значение свойства Login.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        public static DbUsers CreateDbUsers(global::System.Int32 id, global::System.String login, global::System.String password)
        {
            DbUsers dbUsers = new DbUsers();
            dbUsers.ID = id;
            dbUsers.Login = login;
            dbUsers.Password = password;
            return dbUsers;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FileManagerModel", "FK__DbLoggs__UserId__3D5E1FD2", "DbLoggs")]
        public EntityCollection<DbLoggs> DbLoggs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DbLoggs>("FileManagerModel.FK__DbLoggs__UserId__3D5E1FD2", "DbLoggs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DbLoggs>("FileManagerModel.FK__DbLoggs__UserId__3D5E1FD2", "DbLoggs", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
